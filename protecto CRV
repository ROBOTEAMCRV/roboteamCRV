#include <NewPing.h> // Biblioteca para el sensor ultras√≥nico
#include <Servo.h> // Biblioteca para el servo
Servo myservo; // Crea un objeto servo para controlar el servo

#define S0 1  // S0 a pin 4
#define S1 2    // S1 a pin 5
#define S2 3    // S2 a pin 6
#define S3 4    // S3 a pin 7
#define salidaTCS 11 // salidaTCS a pin 8

#define ENA 5
#define ENB 6
#define IN1 7
#define IN2 8
#define IN3 9
#define IN4 10

int Echo = A4;
int Trig = A5;
int rightDistance = 0, leftDistance = 0, middleDistance = 0;



void forward(){
  digitalWrite(ENA,HIGH); //enable L298n A channel
  digitalWrite(ENB,HIGH); //enable L298n B channel
  digitalWrite(IN1,HIGH); //set IN1 hight level
  digitalWrite(IN2,LOW);  //set IN2 low level
  digitalWrite(IN3,LOW);  //set IN3 low level
  digitalWrite(IN4,HIGH); //set IN4 hight level
  Serial.print("Forward- ");//send message to serial monitor
  Serial.println(middleDistance);
}

void back(){
  digitalWrite(ENA,HIGH);
  digitalWrite(ENB,HIGH);
  digitalWrite(IN1,LOW);
  digitalWrite(IN2,HIGH);
  digitalWrite(IN3,HIGH);
  digitalWrite(IN4,LOW);
  Serial.print("Back_ ");
  Serial.println(middleDistance);
}

void backl(){
  myservo.write (120);
  back();
  Serial.println("Back");
}

void backr(){
  myservo.write (60);
  back();
  Serial.println("Back");
}


void left(){
 back();
 delay(1000);
 myservo.write (60);
 forward();
 Serial.println("left");
}

void right(){
  back();
 delay(1000);
 myservo.write (120);
 forward();
  Serial.println("Right");
}


void stop(){
  digitalWrite(ENA,LOW);
  digitalWrite(ENB,LOW);
  Serial.println(middleDistance);
   digitalWrite(IN1,LOW); //set IN1 hight level
  digitalWrite(IN2,LOW);  //set IN2 low level
  digitalWrite(IN3,LOW);  //set IN3 low level
  digitalWrite(IN4,LOW); //set IN4 hight level
}


int getDistance() {
    digitalWrite(Trig, LOW);
    delayMicroseconds(2);
    digitalWrite(Trig, HIGH);
    delayMicroseconds(10);
    digitalWrite(Trig, LOW);
    return (int)pulseIn(Echo, HIGH) / 58;
}


void setup() {
  Serial.begin(9600);//open serial and set the baudrate
  pinMode(IN1,OUTPUT);//before useing io pin, pin mode must be set first
  pinMode(IN2,OUTPUT);
  pinMode(IN3,OUTPUT);
  pinMode(IN4,OUTPUT);
  pinMode(ENA,OUTPUT);
  pinMode(ENB,OUTPUT);
  digitalWrite(S0,HIGH);  // establece frecuencia de salida
  digitalWrite(S1,LOW);   // del modulo al 20 por ciento
}
int rojo = pulseIn(salidaTCS, LOW); // obtiene duracion de pulso de salida del sensor
int verde = pulseIn(salidaTCS, LOW);  // obtiene duracion de pulso de salida del senso
int azul = pulseIn(salidaTCS, LOW); // obtiene duracion de pulso de salida del sensor

void loop(){
middleDistance = getDistance();

forward();
if (middleDistance <= 30 & middleDistance > 1) {
stop();
delay(5000);



  //color
  digitalWrite(S2,LOW);      // establece fotodiodos
  digitalWrite(S3,LOW);     // con filtro rojo
 
  int rojo = pulseIn(salidaTCS, LOW); // obtiene duracion de pulso de salida del sensor
 
  delay(200);       // demora de 200 mseg
  digitalWrite(S2,HIGH);    // establece fotodiodos
  digitalWrite(S3,HIGH);    // con filtro verde
 
  int verde = pulseIn(salidaTCS, LOW);  // obtiene duracion de pulso de salida del senso

delay(200);       // demora de 200 mseg
  digitalWrite(S2,LOW);     // establece fotodiodo
digitalWrite(S3,HIGH);    // con filtro azul\

  int azul = pulseIn(salidaTCS, LOW); // obtiene duracion de pulso de salida del sensor

delay (200);
 
  Serial.print("R:");     // muestra texto
  Serial.print(rojo);     // muestra valor de variable rojo

  Serial.print("\t");     // espacio de tabulacion

  Serial.print("V:");     // muestra texto
  Serial.print(verde);      // muestra valor de variable verde

  Serial.print("\t");     // espacio de tabulacion

  Serial.print("A:");     // muestra texto
  Serial.println(azul);     // muestra valor de variable azul

  back();
delay(3000);
stop();
         
 if (rojo > 250, rojo > azul, rojo > verde){
  left();
  delay(1250);
  stop();
  forward();
  delay(1000);
  stop();
  right();
  delay(1250);
  stop();
  forward();
 }

         
 else if (verde > 250, verde > azul, verde > rojo);{
  right();
  delay(1250);
  stop();
  forward();
  delay(1000);
  stop();
  left();
  delay(1250);
  stop();
  forward();
}
}
else if (azul < 200, verde < 200, 200 > rojo);{
 backl();
 delay(2000);
 left();
 delay(2000);
 forward();
 
}
}
